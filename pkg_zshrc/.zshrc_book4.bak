# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
zstyle :omz:plugins:nvm autoload yes
# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH
# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"
# Set name of the theme to load --- if set to "random", it will
# load a random theme each time Oh My Zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"


export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="powerlevel10k/powerlevel10k"
export ZSH_COMPDUMP=$ZSH/cache/.zcompdump-$HOST
source $ZSH/oh-my-zsh.sh
plugins=(
  git
  zsh-autosuggestions
  yarn
  web-search
  jsontools
  macports
  node
  osx
  sudo
  thor
  docker
  zsh-syntax-highlighting
  mouse
  iterm2
)
export ZSH="$HOME/.oh-my-zsh" 
ZSH_THEME="powerlevel10k/powerlevel10k"  # 없으면 원하는 테마로  
source $ZSH/oh-my-zsh.sh   
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh


export PK_URL="https://github.com/astral-sh/uv/releases/download/0.6.14/uv-x86_64-unknown-linux-gnu.tar.gz"
export D_PKG_BASHRC="/home/pk/Downloads/pk_system/pkg_bashrc"
export D_PKG_ZSHRC="/home/pk/Downloads/pk_system/pkg_zshrc"
export D_PK_WORKING="/home/pk/Downloads/pk_working"
export D_PKG_SH="/home/pk/Downloads/pk_system/pkg_sh"
export D_PK_PROJECT="/home/pk/Downloads/pk_system"
export D_PKG_EXE="/home/pk/Downloads/pk_system/pkg_exe"
export F_UV_ZIP="/home/pk/Downloads/uv.zip"
export F_UV_EXE="/home/pk/Downloads/pk_system/pkg_exe/uv.exe"


alias reboot='sudo reboot'
alias poweroff='sudo poweroff'
alias logout='gnome-session-quit --logout --no-prompt'
alias venv='source "$D_PK_PROJECT/.venv/bin/activate"'
alias pk='uv run python -m "pkg_py.pk"'
# alias pk_backup_bashrc='cp ~/.bashrc $D_PKG_BASHRC/.bashrc.bak.$(date +%Y%m%d_%H%M%S)'
alias pk_backup_bashrc='$D_PKG_SH/ensure_bashrc_backuped.sh'
alias pk_backup_zshrc='$D_PKG_SH/ensure_zshrc_backuped.sh'
alias pk_push_project_to_github='$D_PK_PROJECT/push_project_to_github.sh'
alias pk_cp_pwd='pwd | xclip -selection clipboard'
alias pk_chmod_x_all='chmod +x *'
alias cg='explorer.exe https://chatgpt.com/'
alias cls='clear'
alias x='exit'
alias 0='cd $D_PKG_SH'
alias 1='cd $D_PK_PROJECT'
alias 2='cd $D_PK_WORKING'
# alias nvim="nvim $(fzf)"
# alias pnx='find . "*${1:-*}*"'
# alias pnx="fzf | xclip -selection clipboard"
# pycharm-community
# alias pk_everything="fzf | xclip -selection clipboard && nvim $(xclip -selection clipboard -o)"
# alias pnx="code $D_PK_PROJECT && code $(fzf) | xclip -selection clipboard" # 파이썬으로 작성하자. everything.exe 로서 d 이면 cd 수행, f 면 프로젝트열고 편집수행
# alias pkcd="cd pkg py ... "
# alias pko="open(tab 으로 설정) f "
# alias pnx="fzf | xclip -selection clipboard && nvim $(xclip -selection clipboard -o)"
# alias pnx="fzf | xclip -selection clipboard && echo $(xclip -selection clipboard -o)"
alias pnx="fzf | xclip -selection clipboard && echo $(xclip -selection clipboard -o)"
alias .='explorer.exe .'


# tmux new -d -s pk_session_1
# tmux new -d -s pk_session_2
# tmux new -d -s pk_session_3
# tmux attach -t pk_session_1


cd ~


cd $D_PK_PROJECT



mkdir -p "$D_PKG_BASHRC"
mkdir -p "$D_PKG_ZSHRC"
mkdir -p "$D_PK_WORKING"


# pycharm-community $D_PK_PROJECT
# code ~/.bashrc
# code ~/.zshrc
# gedit ~/.zshrc


# cg


# cls
# neofetch
# tmux ls
cd ~
# pnx

# cd $D_PK_WORKING

export PATH="$HOME/.local/bin:$PATH"



